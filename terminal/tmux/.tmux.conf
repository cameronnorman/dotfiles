# better prefix key
unbind C-b
set-option -g prefix C-Space
unbind C-Space
bind C-Space send-prefix
# better splitting
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"

bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Secondary binding for C-l to retain redraw
is_overmind="tmux display-message -p '#{pane_current_command}' | grep overmind"
bind C-l if-shell "$is_overmind" "send-prefix \; send-keys 'C-l'" "send-keys 'C-l'"
bind C-\\ send-prefix \; send-keys d

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Keys to swap windows
bind-key "l" next-window
bind-key "h" previous-window

# Set new window path to current path
bind c new-window -c "#{pane_current_path}"

# open current path in explorer
bind o run-shell "open '#{pane_current_path}'"

# make current pane zoomed
bind Space resize-pane -Z

# Use vim keybindings in copy mode
bind v copy-mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '

# Start window counting from 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g display-panes-time 350

# Simplify status bar display.
set -g status-left-length 30
set -g status-right-length 100
set -g status-fg "#11111b"
set -g status-bg "#89b4fa"
set -g status-left '[#S - #(cd #{pane_current_path}; git rev-parse --abbrev-ref HEAD)] '
set -g status-right "#{?pane_synchronized,--SYNCED--,} #(curl 'wttr.in/Berlin?format=4') | #(date '+%a, %b %d - %H:%M') "
set-option -g status-position top

# improve colors
set -g default-terminal 'xterm-256color'

# Keep plenty of history for scrollback
set -g history-limit 10000

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

# sane scrolling
set -g mouse on

# window status format
set -g window-status-format " #I #W#F "

# session switcher
bind S choose-tree

# reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Enable copy mode
setw -g mode-keys vi

# list of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'

# TMS config
# https://github.com/jrmoulton/tmux-sessionizer?tab=readme-ov-file
bind s display-popup -E tms
# bind i display-popup -h 90% -w 90% ollama run llama3
bind i new-window ollama run llama3

# TMUX plugin manager (keep at the bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
